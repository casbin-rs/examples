name: Check Code

on:
  pull_request:
  push:
    branches:
      - '*'
      - '!staging.tmp'
    tags:
      - '*'

jobs:
  test:
    name: "Test"
    runs-on: ubuntu-latest

    steps:
    - name: "Checkout Repository"
      uses: actions/checkout@v2

    - name: "Use Rust stable"
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          profile: minimal
  
    - name: "Check rust_cache"
      uses: Swatinem/rust-cache@v1
  
    - name: Generate test secret key
      shell: sh
      run: |
        mv src/secret.key.sample src/secret.key
      working-directory: actix-middleware-example

    - name: "Print Rust Version"
      run: |
        rustc -Vv
        cargo -Vv
    - name: "Build for Linux"
      run: |
        cargo check --all
        cargo test --all --no-fail-fast

  check_formatting:
    name: "Check Formatting"
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout Repository"
      uses: actions/checkout@v1

    - name: "Use the latest Rust stable with rustfmt"
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          profile: minimal
          components: rustfmt
          override: true
    - run: cargo fmt --all -- --check

  check_clippy:
    name: "Check Clippy"
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout Repository"
      uses: actions/checkout@v1

    - name: Generate test secret key_actix
      shell: sh
      run: |
        mv src/secret.key.sample src/secret.key
      working-directory: actix-middleware-example
    
    - name: Generate test secret key_axum
      shell: sh
      run: |
        mv src/secret.key.sample src/secret.key
      working-directory: axum-middleware-example

    - name: "Use the latest Rust stable with clippy"
      uses: actions-rs/toolchain@v1
      with:
          toolchain: stable
          profile: minimal
          components: clippy
          override: true
    - run: cargo clippy -- -D warnings
